steps:
- name: node
  entrypoint: npm
  args:
    - 'install'
- name: node
  entrypoint: "bash"
  args:
    - "-c"
    - 'npm run lint'
- name: node
  entrypoint: "bash"
  args:
    - "-c"
    - 'npm run unit-test'
- name: gcr.io/cloud-builders/gcloud
  entrypoint: "bash"
  args:
    - "-c"
    - "gcloud secrets versions access latest --secret=apigee_cicd_password --format='get(payload.data)' | tr '_-' '/+' | base64 -d > apigeepass.txt"
- name: gcr.io/cloud-builders/gcloud
  entrypoint: "bash"
  args:
    - "-c"
    - "gcloud secrets versions access latest --secret=apigee_cicd_user --format='get(payload.data)' | tr '_-' '/+' | base64 -d > apigeeuser.txt"
- name: 'gcr.io/cloud-builders/mvn'
  entrypoint: 'bash'
  args:
    - "-c"
    - "mvn -f ./pom-saas.xml clean install -Ptest -Dpassword=$(cat
    apigeepass.txt) -Dusername=$(cat
    apigeeuser.txt) -Denv=$_DEPLOYMENT_ENV -Dorg=$_DEPLOYMENT_ORG -Ddeployment.description=\"CloudRun
    Build: $BUILD_ID\""
- name: node
  entrypoint: "bash"
  args:
    - "-c"
    - 'npm run integration-test'
  env:
    - "TEST_HOST=$_INT_TEST_HOST"
    - "TEST_BASE_PATH=$_INT_TEST_BASE_PATH"
- name: 'gcr.io/cloud-builders/gsutil'
  args:
    - '-m'
    - 'cp'
    - '-r'
    - 'coverage*'
    - 'gs://${PROJECT_ID}_cloudbuild/reports/$BUILD_ID/coverage'

substitutions:
    _DEPLOYMENT_ORG: org
    _DEPLOYMENT_ENV: test
    _INT_TEST_HOST: org-env.apigee.net
    _INT_TEST_BASE_PATH: /airports-cicd/v1

artifacts:
  objects:
    location: "gs://${PROJECT_ID}_cloudbuild/reports/$BUILD_ID"
    paths:
      - "./report.*.html"
